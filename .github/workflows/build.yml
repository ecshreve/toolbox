name: build

on:
  pull_request: 
    branches:
      - main
  release: 
    types: [published]

env:
  IMAGE_NAME: ghcr.io/ecshreve/toolbox
  DEV_IMAGE_NAME: ghcr.io/ecshreve/toolbox-dev

jobs:
  semver:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    outputs:
      docktag: ${{ steps.semver-tag.outputs.tag }}
    steps:
      - name: Get semver docker tag
        id: semver-tag
        run: |
          vtag="${{ github.ref_name }}"
          echo "tag=${vtag:1}" >> "$GITHUB_OUTPUT"

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile', '**/devcontainer.json') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up docker tags
        id: tag-docker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.tag-docker.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Pre-build dev container image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ${{ env.DEV_IMAGE_NAME }}
          cacheFrom: ${{ env.DEV_IMAGE_NAME }}
          imageTag: latest
          push: always

  devcon:
    runs-on: ubuntu-latest
    needs: semver
    steps:
      - name: Build release devcontainer
        if: github.event_name == 'release'
        uses: devcontainers/ci@v0.3
        with:
          imageName: ${{ env.DEV_IMAGE_NAME }}
          cacheFrom: ${{ env.DEV_IMAGE_NAME }}
          imageTag: ${{ needs.semver.outputs.docktag }}
          push: always

