name: Cleanup GHCR Packages

on:
  schedule:
    - cron: '0 2 * * *'  # Runs daily at 02:00 AM UTC
  workflow_dispatch:

jobs:
  delete-untagged-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Delete untagged GHCR packages
        env:
          GHCR_TOKEN: ${{ secrets.GH_CUSTOM_PAT }}
          OWNER: ${{ github.repository_owner }}
        run: |
          #!/bin/bash
          AUTH_HEADER="Authorization: Bearer $GHCR_TOKEN"
          CONTENT_HEADER="Accept: application/vnd.github.v3+json"

          # Define your package names
          packages=("toolbox" "toolbox-dev")

          # Base URL for GHCR API
          PACKAGES_URL="https://api.github.com/user/packages/container"

          echo "Checking packages for untagged versions"
          for package_name in "${packages[@]}"; do
            echo "Checking package: $package_name"
           
            # Fetch package versions
            versions=$(curl -s -H "$AUTH_HEADER" -H "$CONTENT_HEADER" "$PACKAGES_URL/$package_name/versions" | jq -r '.[] | select(.metadata.container.tags == []) | .id')

            # Delete untagged package versions
            for version_id in $versions; do
              echo "Deleting untagged package version: $version_id of package $package_name"
              delete_response=$(curl -s -X DELETE -H "$AUTH_HEADER" -H "$CONTENT_HEADER" "$PACKAGES_URL/$package_name/versions/$version_id")
              echo $delete_response
            done
          done

  delete-old-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Delete old GHCR packages
        env:
            GHCR_TOKEN: ${{ secrets.GH_CUSTOM_PAT }}
            OWNER: ${{ github.repository_owner }}
        run: |
          #!/bin/bash
          AUTH_HEADER="Authorization: Bearer $GHCR_TOKEN"
          CONTENT_HEADER="Accept: application/vnd.github.v3+json"

          # Define your package names
          packages=("toolbox" "toolbox-dev")

          # Base URL for GHCR API
          PACKAGES_URL="https://api.github.com/user/packages/container"

          echo "Checking packages for old versions"
          for package_name in "${packages[@]}"; do
            echo "Checking package: $package_name"
            
            # Fetch package versions
            versions=$(curl -s -H "$AUTH_HEADER" -H "$CONTENT_HEADER" "$PACKAGES_URL/$package_name/versions" | jq -r '.[] | select(.metadata.container.tags | contains(["latest"]) | not) | .id')
            
            # Check if more than 10 images
            if [ $(echo $versions | wc -w) -lt 10 ]; then
              echo "Less than 10 images found, all done"
              exit 0
            fi

            # Shift the array to keep only the last 10 images
            versions_old=${versions[@]:10}

            # Delete untagged package versions
            for version_id in $version_old; do
              echo "DRYDeleting old package version: $version_id of package $package_name"
              # delete_response=$(curl -s -X DELETE -H "$AUTH_HEADER" -H "$CONTENT_HEADER" "$PACKAGES_URL/$package_name/versions/$version_id")
              # echo $delete_response
            done
          done
