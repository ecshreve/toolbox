name: ci

on:
  push:
    branches:
      - main
  

env:
  REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: ecshreve/toolbox
  DEV_IMAGE_NAME: ecshreve/toolbox-dev

jobs:
  call-build:
    uses: ecshreve/toolbox/.github/workflows/build.yml@main

  debug:
    needs: call-build
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: docker images
        
  # build-docker-image:
  #   needs: docker-meta
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Set up buildx
  #       uses: docker/setup-buildx-action@v3
      
  #     - name: Setup tags
  #       id: tag-meta
  #       run: |
  #         docker_tags=$(echo ${{ needs.docker-meta.outputs.tags }} | awk -v prefix="${{ env.DOCKER_IMAGE_NAME }}" '{for (i=1; i<=NF; i++) printf "%s%s\n", prefix, $i}')
  #         echo "tags=$docker_tags" >> $GITHUB_OUTPUT

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.tag-meta.outputs.tags }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max

  # build-devcontainer:
  #   needs:
  #     - docker-meta
  #     - build-docker-image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
      
  #     - name: Build and push devcontainer image
  #       uses: devcontainers/ci@v0.3
  #       with:
  #         imageName: ${{ env.REGISTRY }}/${{ env.DEV_IMAGE_NAME }}
  #         cacheFrom: ${{ env.REGISTRY }}/${{ env.DEV_IMAGE_NAME }}
  #         imageTag: ${{ needs.docker-meta.outputs.tags }}
  #         push: filter
  #         eventFilterForPush: push

    