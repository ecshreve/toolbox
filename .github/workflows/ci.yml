name: Combined CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: ecshreve/toolbox
  DEV_IMAGE_NAME: ecshreve/toolbox-dev

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-devcontainer:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prebuild ${{ env.DEV_IMAGE_NAME }} image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ${{ env.REGISTRY }}/${{ env.DEV_IMAGE_NAME }}
          cacheFrom: ${{ env.REGISTRY }}/${{ env.DEV_IMAGE_NAME }},${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          imageTag: latest,${{ github.ref_name }}
          push: filter
          eventFilterForPush: release

  