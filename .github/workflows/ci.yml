name: ci

on:
  pull_request: 
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

env:
  LATEST_TAG: ghcr.io/ecshreve/toolbox:latest
  IMAGE_NAME: ghcr.io/ecshreve/toolbox

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      imageid: ${{ steps.push-docker.outputs.imageid }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up docker tags
        id: tag-docker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,latest

      - name: Tag and push Docker image
        id: push-docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.tag-docker.outputs.tags }}
          labels: ${{ steps.tag-docker.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          provenance: false

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: echo ${{ needs.build.outputs.imageid }}
      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_CUSTOM_PAT }}
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          prerelease: false
          body: |
            ${{ needs.build.outputs.imageid }}
