---
- name: Install dependencies with macports
  community.general.macports:
    name: "{{ item }}"
  become: true
  loop: "{{ asdf_mac_dependencies }}"
  when: ansible_os_family == "Darwin"

- name: Install dependencies with variants
  community.general.macports:
    name: "{{ item.name }}"
    variant: "{{ item.variant }}"
  become: true
  loop: "{{ asdf_mac_dependencies_variants }}"
  when: ansible_os_family == "Darwin"

- name: Install dependencies with apt
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  become: true
  loop: "{{ asdf_apt_dependencies }}"
  when: ansible_os_family == "Debian"

- name: Install python build dependencies with apt
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  become: true
  loop: "{{ python_build_dependencies }}"
  when: ansible_os_family == "Debian"

- name: Check for existing asdf install
  ansible.builtin.git:
    repo: "{{ asdf_repo }}"
    dest: "{{ asdf_root }}"
    version: "{{ asdf_version }}"
    clone: no
  register: asdf_results

- name: Install asdf
  ansible.builtin.git:
    repo: "{{ asdf_repo }}"
    dest: "{{ asdf_root }}"
    version: "{{ asdf_version }}"
  when: not asdf_results.before

- name: Set asdf_source Variable
  ansible.builtin.set_fact:
    asdf_source: "{{ asdf_root }}/asdf.sh"

- name: Install asdf plugins
  ansible.builtin.shell:
    cmd: "source {{ asdf_source }}; asdf plugin add {{ item.name }}"
    creates: "{{ asdf_root }}/plugins/{{ item.name }}"
  loop: "{{ asdf_plugins }}"

- name: Install asdf apps 
  ansible.builtin.shell:
    cmd: "source {{ asdf_source }}; asdf install {{ item.name }} {{ item.version }}"
    creates: "{{ asdf_root }}/installs/{{ item.name }}/{{ item.version }}"
  loop: "{{ asdf_plugins }}"
