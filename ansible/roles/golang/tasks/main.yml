---
- name: Check if Go is already installed.
  ansible.builtin.stat:
    path: "{{ ansible_GOROOT }}/bin/go"
  register: go_stat

- name: Remove current installation.
  ansible.builtin.file:
    state: absent
    path: "{{ ansible_GOROOT }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: go_stat.stat.exists and go_update

- name: Install Go
  when: not go_stat.stat.exists and go_update
  block:
    - name: Download Go.
      ansible.builtin.get_url:
        url: "{{ go_download_url }}"
        dest: /usr/local/src/{{ go_tarball }}
        checksum: "sha256:{{ go_checksum }}"
        mode: '0644'
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Extract Go.
      ansible.builtin.unarchive:
        src: /usr/local/src/{{ go_tarball }}
        dest: /usr/local
        copy: false
      ignore_errors: "{{ ansible_check_mode }}"

- name: Add Go to to system-wide $PATH.
  ansible.builtin.copy:
    dest: /etc/profile.d/go-path.sh
    content: |-
      export PATH=$PATH:/usr/local/go/bin
    mode: '0644'
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install go packages with go install.
  ansible.builtin.command:
    cmd: "{{ ansible_GOROOT }}/bin/go install {{ item.value }}"
    creates: "{{ ansible_GOROOT }}/bin/{{ item.key }}"
  environment:
    GOPATH: /usr/local/go
  loop: "{{ go_packages | dict2items }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure config directories exist
  ansible.builtin.file:
    path: "{{ home_dir }}/.config/{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - mods
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy config files for go apps
  ansible.builtin.copy:
    src: "{{ toolbox_path }}/configs/{{ item | basename }}"
    dest: "{{ home_dir }}/{{ item }}"
    mode: '0644'
  loop:
    - ".config/mods/mods.yml"
  ignore_errors: "{{ ansible_check_mode }}"
