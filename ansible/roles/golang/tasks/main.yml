---
- name: Check if Go is already installed.
  ansible.builtin.command: /usr/local/go/bin/go version
  ignore_errors: true
  register: go_version_result
  changed_when: false

- name: Clean install
  when:
    - go_version_result is succeeded
    - go_version not in go_version_result.stdout
    - clean_install
  block:
    - name: Remove current installation.
      ansible.builtin.file:
        state: absent
        path: "{{ ansible_GOROOT }}"
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Download Go.
      ansible.builtin.get_url:
        url: "{{ go_download_url }}"
        dest: /usr/local/src/{{ go_tarball }}
        checksum: "sha256:{{ go_checksum }}"
        mode: '0644'
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Extract Go.
      ansible.builtin.unarchive:
        src: /usr/local/src/{{ go_tarball }}
        dest: /usr/local
        copy: false
      ignore_errors: "{{ ansible_check_mode }}"


- name: Add Go to to system-wide $PATH.
  ansible.builtin.copy:
    dest: /etc/profile.d/go-path.sh
    content: |-
      export PATH=$PATH:/usr/local/go/bin
    mode: '0644'
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install go packages with go install.
  ansible.builtin.command: "{{ ansible_GOROOT }}/bin/go install {{ item.value }}"
  environment:
    GOPATH: /usr/local/go
  loop: "{{ go_packages | dict2items }}"
  changed_when: false
